= lcb_unlock(3couchbase)
:doctype: manpage
Trond Norbye <trond.norbye@couchbase.com>

NAME
----
lcb_unlock - unlock a document

SYNOPSIS
--------
cc [ flag ... ] file... -lcouchbase [ library ... ]

    #include <libcouchbase/couchbase.h>

    lcb_error_t lcb_unlock(lcb_t instance,
                           const void *command_cookie,
                           lcb_size_t num,
                           const lcb_unlock_cmd_t *const *commands);

DESCRIPTION
-----------
lcb_unlock() is used to unlock a document previously locked with
lcb_get(). If the library instance is using asynchronous mode (the
default) this operation will return immediately and schedule the
operations to be executed by the event loop, otherwise it will block
until all commands are executed. command_cookie is is an opaque field
that will be provided to the callback function. num is the number of
entries in the commands array.

lcb_unlock_cmd_t is a structure defined in <libcouchbase/arguments.h>:

    typedef struct lcb_unlock_cmd_st {
        int version;              /* The enty in "v" to use */
        union {
            struct {
                const void *key;    /* The key this response belongs to */
                lcb_size_t nkey;    /* The number of bytes in the key */
                lcb_cas_t cas;      /* The lock identified */
                const void *hashkey; /* hash key if != key */
                lcb_size_t nhashkey; /* number of bytes in hash key */
            } v0;
        } v;
    } lcb_unlock_cmd_t;


Please note that using the another key for hashing may lead to an
unbalanced cluster if the key does not distribute well with a crc32
hashing function.


Upon completion the unlock callback as set by lcb_set_unlock_callback
is called.

RETURN VALUES
-------------
lcb_unlock() returns the LCB_SUCCESS on success, or a specific error
code upon failure. See lcb_strerror(3couchbase) for more information.

EXAMPLES
--------

         #include <libcouchbase/couchbase.h>

         ...
         lcb_t instance;
         ...
         lcb_unlock_cmd_t *unlock = calloc(1, sizeof(*unlock));
         unlock->version = 0;
         unlock->v.v0.key = "my-key";
         unlock->v.v0.nkey = strlen(unlock->v.v0.key);
         unlock->v.v0.cas = 0x666;
         lcb_unlock_cmd_t* commands[] = { unlock };
         lcb_unlock(instance, NULL, 1, commands);
         ...


ATTRIBUTES
----------
See lcb_attributes(5) for descriptions of the following attributes:

[options="header"]
|=======================================
| ATTRIBUTE TYPE      | ATTRIBUTE VALUE
| Interface Stability | Committed
| MT-Level            | MT-Safe
|=======================================

COPYRIGHT
---------
Copyright 2010-2013 Couchbase, Inc.

SEE ALSO
--------
Learn more at <http://www.couchbase.com/communities/c>.

libcouchbase(3lib), lcb_get_unlock_callback(3couchbase),
lcb_set_unlock_callback(3couchbase), lcb_attributes(5)
