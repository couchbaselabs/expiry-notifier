= lcb_remove(3couchbase)
:doctype: manpage
Trond Norbye <trond.norbye@couchbase.com>

NAME
----
lcb_remove - remove a document

SYNOPSIS
--------
cc [ flag ... ] file... -lcouchbase [ library ... ]

    #include <libcouchbase/couchbase.h>

    lcb_error_t lcb_remove(lcb_t instance,
                           const void *command_cookie,
                           lcb_size_t num,
                           const lcb_remove_cmd_t *const *commands);

DESCRIPTION
-----------
lcb_remove() is used to remove documents. If the library instance is
using asynchronous mode (the default) this operation will return
immediately and schedule the operations to be executed by the event
loop, otherwise it will block until all commands are
executed. command_cookie is is an opaque field that will be provided
to the callback function. num is the number of entries in the commands
array.

lcb_remove_cmd_t is a structure defined in <libcouchbase/arguments.h>:

    typedef struct lcb_remove_cmd_st {
        int version;              /* The enty in "v" to use */
        union {
            struct {
                const void *key;    /* The key this response belongs to */
                lcb_size_t nkey;    /* The number of bytes in the key */
                lcb_cas_t cas;      /* The object identifier */
                const void *hashkey; /* hash key if != key */
                lcb_size_t nhashkey; /* number of bytes in hash key */
            } v0;
        } v;
    } lcb_remove_cmd_t;

Set cas to 0 unless you want to only remove the document if the cas value
matches.

Upon completion the remove callback as set by lcb_set_remove_callback is called.

RETURN VALUES
-------------
lcb_remove() returns the LCB_SUCCESS on success, or a specific error
code upon failure. See lcb_strerror(3couchbase) for more information.


EXAMPLES
--------

         #include <libcouchbase/couchbase.h>

         ...
         lcb_t instance;
         ...
         lcb_remove_cmd_t *remove = calloc(1, sizeof(*remove));
         remove->version = 0;
         remove->v.v0.key = "my-key";
         remove->v.v0.nkey = strlen(remove->v.v0.key);
         remove->v.v0.cas = 0x000;
         lcb_remove_cmd_t* commands[] = { remove };
         lcb_remove(instance, NULL, 1, commands);
         ...

ATTRIBUTES
----------
See lcb_attributes(5) for descriptions of the following attributes:

[options="header"]
|=======================================
| ATTRIBUTE TYPE      | ATTRIBUTE VALUE
| Interface Stability | Committed
| MT-Level            | MT-Safe
|=======================================

COPYRIGHT
---------
Copyright 2010-2013 Couchbase, Inc.

SEE ALSO
--------
Learn more at <http://www.couchbase.com/communities/c>.

libcouchbase(3lib), lcb_get_remove_callback(3couchbase),
lcb_set_remove_callback(3couchbase), lcb_attributes(5)
