'\" t
.\"     Title: lcb_set_verbosity
.\"    Author: Trond Norbye <trond.norbye@couchbase.com>
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/02/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "LCB_SET_VERBOSITY" "3" "08/02/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
lcb_set_verbosity \- Set verbosity level on a node
.SH "SYNOPSIS"
.sp
cc [ flag \&... ] file\&... \-lcouchbase [ library \&... ]
.sp
.nf
#include <libcouchbase/couchbase\&.h>
.fi
.sp
.nf
lcb_error_t lcb_verbosity(lcb_t instance,
                          const void *command_cookie,
                          lcb_size_t num,
                          const lcb_verbosity_cmd_t *const *commands);
.fi
.SH "DESCRIPTION"
.sp
lcb_set_verbosity() is used to change the verbosity level on the cluster\&. If the library instance is using asynchronous mode (the default) this operation will return immediately and schedule the operations to be executed by the event loop, otherwise it will block until all commands are executed\&. command_cookie is is an opaque field that will be provided to the callback function\&. num is the number of entries in the commands array\&.
.sp
lcb_verbosity_cmd_t is a structure defined in <libcouchbase/arguments\&.h>:
.sp
.if n \{\
.RS 4
.\}
.nf
typedef struct lcb_verbosity_cmd_st {
    int version;              /* The enty in "v" to use */
    union {
        struct {
            const char *server; /* The server to modify (or NULL for all) */
            lcb_verbosity_level_t level; /* The new level */
        } v0;
    } v;
};
.fi
.if n \{\
.RE
.\}
.sp
Upon completion the verbosity callback as set by lcb_set_verbosity_callback(3) is called\&. The callback is called multiple times\&. See lcb_set_verbosity_callback(3) for more information about verbosity callbacks\&.
.SS "Verbosity levels"
.sp
The following levels is defined:
.sp
.if n \{\
.RS 4
.\}
.nf
LCB_VERBOSITY_DETAIL    This is the most verbose level and
                        generates a lot of output\&. Using
                        this level will impact the clusters
                        performance\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
LCB_VERBOSITY_DEBUG     This level generates a lot of output\&.
                        Using this level will impact the
                        clusters performance\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
LCB_VERBOSITY_INFO      This level trace all commands and
                        generates a fair amount of output\&.
                        Depending on the workload it may
                        slow down the system a little bit\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
LCB_VERBOSITY_WARNING   This is the default level and only
                        errors and warnings will be logged\&.
.fi
.if n \{\
.RE
.\}
.SH "RETURN VALUES"
.sp
lcb_verbosity() returns the LCB_SUCCESS on success, or a specific error code upon failure\&. See lcb_strerror(3) for more information\&.
.SH "EXAMPLES"
.sp
.if n \{\
.RS 4
.\}
.nf
#include <libcouchbase/couchbase\&.h>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
\&.\&.\&.
lcb_t instance;
\&.\&.\&.
lcb_verbosity_cmd_t *verbosity = calloc(1, sizeof(*verbosity));
verbosity\->version = 0;
verbosity\->v\&.v0\&.level = LCB_VERBOSITY_INFO;
lcb_verbosity_cmd_t* commands[] = { verbosity };
lcb_verbosity(instance, NULL, 1, commands);
\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.SH "ATTRIBUTES"
.sp
See lcb_attributes(5) for descriptions of the following attributes:
.TS
allbox tab(:);
ltB ltB.
T{
ATTRIBUTE TYPE
T}:T{
ATTRIBUTE VALUE
T}
.T&
lt lt
lt lt.
T{
.sp
Interface Stability
T}:T{
.sp
Committed
T}
T{
.sp
MT\-Level
T}:T{
.sp
MT\-Safe
T}
.TE
.sp 1
.SH "COPYRIGHT"
.sp
Copyright 2010\-2013 Couchbase, Inc\&.
.SH "SEE ALSO"
.sp
Learn more at http://www\&.couchbase\&.com/communities/c\&.
.sp
libcouchbase(3), lcb_get_verbosity_callback(3), lcb_set_verbosity_callback(3), lcb_attributes(5)
.SH "AUTHOR"
.PP
\fBTrond Norbye\fR <\&trond\&.norbye@couchbase\&.com\&>
.RS 4
Author.
.RE
