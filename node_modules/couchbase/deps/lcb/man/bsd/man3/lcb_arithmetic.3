'\" t
.\"     Title: lcb_arithmetic
.\"    Author: Trond Norbye <trond.norbye@couchbase.com>
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/02/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "LCB_ARITHMETIC" "3" "08/02/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
lcb_arithmetic \- Perform arithmetic operations
.SH "SYNOPSIS"
.sp
cc [ flag \&... ] file\&... \-lcouchbase [ library \&... ]
.sp
.nf
#include <libcouchbase/couchbase\&.h>
.fi
.sp
.nf
lcb_error_t lcb_arithmetic(lcb_t instance,
                           const void *command_cookie,
                           lcb_size_t num,
                           const lcb_arithmetic_cmd_t *const *commands);
.fi
.SH "DESCRIPTION"
.sp
lcb_arithmetic() is used to perform a arithmetic operations on a document\(cqs value\&. If the library instance is using asynchronous mode (the default) this operation will return immediately and schedule the operations to be executed by the event loop, otherwise it will block until all commands are executed\&. command_cookie is is an opaque field that will be provided to the callback function\&. num is the number of entries in the commands array\&.
.sp
lcb_arithmetic_cmd_t is a structure defined in <libcouchbase/arguments\&.h>:
.sp
.if n \{\
.RS 4
.\}
.nf
typedef struct lcb_arithmetic_cmd_st {
         int version;              /* The enty in "v" to use */
         union {
            struct {
               const void *key;    /* The key this response belongs to */
               lcb_size_t nkey;    /* The number of bytes in the key */
               lcb_time_t exptime; /* The documents expiry time */
               int create;         /* create non\-existent documents */
               lcb_int64_t delta;  /* amount to add/subtract */
               lcb_uint64_t initial; /* initial value if creating */
               const void *hashkey; /* hash key if != key */
               lcb_size_t nhashkey; /* number of bytes in hash key */
            } v0;
         } v;
      };
.fi
.if n \{\
.RE
.\}
.sp
Please note that using an alternate key for hashing may lead to an unbalanced cluster if the key does not hash evenly with a crc32\&.
.sp
Upon completion the arithmetic callback as set by lcb_set_arithmetic_callback is called\&.
.SH "RETURN VALUES"
.sp
lcb_arithmetic() returns the LCB_SUCCESS on success, or a specific error code upon failure\&. See lcb_strerror(3) for more information\&.
.SH "EXAMPLES"
.sp
Example 1: Query the current callback
.sp
.if n \{\
.RS 4
.\}
.nf
#include <libcouchbase/couchbase\&.h>
\&.\&.\&.
lcb_t instance;
\&.\&.\&.
lcb_arithmetic_cmd_t *arithmetic = calloc(1, sizeof(*arithmetic));
arithmetic\->version = 0;
arithmetic\->v\&.v0\&.key = "counter";
arithmetic\->v\&.v0\&.nkey = strlen(arithmetic\->v\&.v0\&.key);
arithmetic\->v\&.v0\&.initial = 0x666;
arithmetic\->v\&.v0\&.create = 1;
arithmetic\->v\&.v0\&.delta = 1;
lcb_arithmetic_cmd_t* commands[] = { arithmetic };
lcb_arithmetic(instance, NULL, 1, commands);
\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.SH "ATTRIBUTES"
.sp
See lcb_attributes(5) for descriptions of the following attributes:
.TS
allbox tab(:);
ltB ltB.
T{
ATTRIBUTE TYPE
T}:T{
ATTRIBUTE VALUE
T}
.T&
lt lt
lt lt.
T{
.sp
Interface Stability
T}:T{
.sp
Committed
T}
T{
.sp
MT\-Level
T}:T{
.sp
MT\-Safe
T}
.TE
.sp 1
.SH "COPYRIGHT"
.sp
Copyright 2010\-2013 Couchbase, Inc\&.
.SH "SEE ALSO"
.sp
Learn more at http://www\&.couchbase\&.com/communities/c\&.
.sp
libcouchbase(3), lcb_get_arithmetic_callback(3), lcb_set_arithmetic_callback(3), lcb_attributes(5)
.SH "AUTHOR"
.PP
\fBTrond Norbye\fR <\&trond\&.norbye@couchbase\&.com\&>
.RS 4
Author.
.RE
