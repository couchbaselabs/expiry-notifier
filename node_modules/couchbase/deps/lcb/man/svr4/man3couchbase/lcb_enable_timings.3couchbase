'\" t
.\"     Title: lcb_enable_timings
.\"    Author: Trond Norbye <trond.norbye@couchbase.com>
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/02/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "LCB_ENABLE_TIMINGS" "3couchbase" "08/02/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
lcb_enable_timings \- internal timings
.SH "SYNOPSIS"
.sp
cc [ flag \&... ] file\&... \-lcouchbase [ library \&... ]
.sp
.nf
#include <libcouchbase/couchbase\&.h>
.fi
.sp
.nf
lcb_error_t lcb_enable_timings(lcb_t instance);
.fi
.sp
.nf
lcb_error_t lcb_disable_timings(lcb_t instance);
.fi
.sp
.nf
lcb_error_t lcb_get_timings(lcb_t instance,
                            const void * cookie,
                            lcb_timings_callback callback);
.fi
.SH "DESCRIPTION"
.sp
libcouchbase provides a simple form of per\-command timings you may use to figure out the current lantency for the request\-response cycle as generated by your application\&. Please note that these numbers are not necessarily accurate as you may affect the timing recorded by doing work in the event loop\&.
.sp
The time recorded with this library is the time elapsed from the command being called, and the response packet being received from the server\&. Everything the application does before driving the event loop will affect the timers\&.
.sp
The function lcb_enable_timings() is used to enable the timings for the given instance, and lcb_disable_timings is used to disable the timings\&. The overhead of using the timers should be negligible\&.
.sp
The function lcb_get_timings is used to retrieve the current timing\&. values from the given instance\&. The cookie is passed transparently to the callback function\&. The lcb_timings_callback is a function with the following signature:
.sp
.if n \{\
.RS 4
.\}
.nf
void  function(lcb_t instance,
               const void *cookie,
               lcb_timeunit_t timeunit,
               lcb_uint32_t min,
               lcb_uint32_t max,
               lcb_uint32_t total,
               lcb_uint32_t maxtotal);
.fi
.if n \{\
.RE
.\}
.sp
instance is the libcouchbase instance that called lcb_get_timings()\&. cookie is the cookie provided to lcb_get_timings()\&. timeunit is the unit of time for the values (see below for the values)\&. min and max specify the time range for this bucket\&. total is the number of commands within this time range\&. maxtotal is the highest number in one of the buckets (this value may be used to "scale" the other values\&.
.SS "Time units"
.sp
The following time units are defined:
.sp
.if n \{\
.RS 4
.\}
.nf
LCB_TIMEUNIT_NSEC     The times are specified in nanoseconds
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
LCB_TIMEUNIT_USEC     The times are specified in microseconds
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
LCB_TIMEUNIT_MSEC     The times are specified in milliseconds
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
LCB_TIMEUNIT_SEC      The times are specified in seconds
.fi
.if n \{\
.RE
.\}
.SH "RETURN VALUES"
.sp
lcb_enable_timings(), lcb_disable_timings() and lcb_get_timings() returns LCB_SUCCESS on success, or an error code describing the error otherwise\&. See lcb_strerror(3couchbase) for more information about error codes\&.
.SH "EXAMPLES"
.sp
The following example dumps a small histogram of lantencies
.sp
.if n \{\
.RS 4
.\}
.nf
#include <libcouchbase/couchbase\&.h>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
static void callback(lcb_t instance, const void *cookie,
                     lcb_timeunit_t timeunit,
                     lcb_uint32_t min,
                     lcb_uint32_t max,
                     lcb_uint32_t total,
                     lcb_uint32_t maxtotal)
{
    FILE* out = (void*)cookie;
    int num = (float)10\&.0 * (float)total / ((float)maxtotal);
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
fprintf(out, "[%3u \- %3u]", min, max);
switch (timeunit) {
case LCB_TIMEUNIT_NSEC:
    fprintf(out, "ns");
    break;
case LCB_TIMEUNIT_USEC:
    fprintf(out, "us");
    break;
case LCB_TIMEUNIT_MSEC:
    fsprintf(out, "ms");
    break;
case LCB_TIMEUNIT_SEC:
    fprintf(out, "s ");
    break;
default:
    ;
}
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
fprintf(out, " |");
for (int ii = 0; ii < num; ++ii) {
    fprintf(out, "#");
}
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
    fprintf(out, " \- %u\en", total);
}
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
\&.\&.\&.
lb_enable_timings(instance);
\&.\&.\&. do a lot of operations \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
fprintf(stderr, "              +\-\-\-\-\-\-\-\-\-+\en"
lcb_get_timings(instance, stderr, callback);
fprintf(stderr, "              +\-\-\-\-\-\-\-\-\-+\en"
lcb_disable_timings(instance);
\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp
Note that the source code for libcouchbase also includes an example program which further demonstrates these functions\&.
.SH "ATTRIBUTES"
.sp
See lcb_attributes(5) for descriptions of the following attributes:
.TS
allbox tab(:);
ltB ltB.
T{
ATTRIBUTE TYPE
T}:T{
ATTRIBUTE VALUE
T}
.T&
lt lt
lt lt.
T{
.sp
Interface Stability
T}:T{
.sp
Committed
T}
T{
.sp
MT\-Level
T}:T{
.sp
MT\-Safe
T}
.TE
.sp 1
.SH "COPYRIGHT"
.sp
Copyright 2010\-2013 Couchbase, Inc\&.
.SH "SEE ALSO"
.sp
Learn more at http://www\&.couchbase\&.com/communities/c\&.
.sp
libcouchbase(3lib), lcb_create(3couchbase), lcb_wait(3couchbase), lcb_attributes(5)
.SH "AUTHOR"
.PP
\fBTrond Norbye\fR <\&trond\&.norbye@couchbase\&.com\&>
.RS 4
Author.
.RE
