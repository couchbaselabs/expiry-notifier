'\" t
.\"     Title: lcb_get_cookie
.\"    Author: Trond Norbye <trond.norbye@couchbase.com>
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/02/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "LCB_GET_COOKIE" "3couchbase" "08/02/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
lcb_get_cookie \- Get userdata stored for instance
.SH "SYNOPSIS"
.sp
cc [ flag \&... ] file\&... \-lcouchbase [ library \&... ]
.sp
.nf
#include <libcouchbase/couchbase\&.h>
.fi
.sp
.nf
const void *lcb_get_cookie(lcb_t instance);
.fi
.sp
.nf
void lcb_set_cookie(lcb_t instance, const void * cookie);
.fi
.SH "DESCRIPTION"
.sp
These functions are used to attach or retrieve a user\-defined value to a libcouchbase instance\&.
.sp
The lcb_set_cookie() function attach a cookie to the specified libcouchbase instance\&. The cookie may be whatever you want (an address of a structure, an integer value), and libcouchbase will not do anything with the value\&.
.sp
The lcb_get_cookie() function returns the same cookie stored with lcb_set_cookie()\&.
.SH "RETURN VALUES"
.sp
lcb_get_cookie() returns the value set by lcb_set_cookie(), or NULL if no value is set by lcb_set_cookie()\&.
.SH "EXAMPLES"
.sp
.if n \{\
.RS 4
.\}
.nf
#include <libcouchbase/couchbase\&.h>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
\&.\&.\&.
lcb_t instance;
\&.\&.\&.
lcb_set_cookie(instance, "this is the cookie");
fprintf(stdout, "%s\en", lcb_get_cookie(instance);
\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.SH "ATTRIBUTES"
.sp
See lcb_attributes(5) for descriptions of the following attributes:
.TS
allbox tab(:);
ltB ltB.
T{
ATTRIBUTE TYPE
T}:T{
ATTRIBUTE VALUE
T}
.T&
lt lt
lt lt.
T{
.sp
Interface Stability
T}:T{
.sp
Committed
T}
T{
.sp
MT\-Level
T}:T{
.sp
MT\-Safe
T}
.TE
.sp 1
.SH "COPYRIGHT"
.sp
Copyright 2010\-2013 Couchbase, Inc\&.
.SH "SEE ALSO"
.sp
Learn more at http://www\&.couchbase\&.com/communities/c\&.
.sp
libcouchbase(3lib), lcb_create(3couchbase), lcb_attributes(5)
.SH "AUTHOR"
.PP
\fBTrond Norbye\fR <\&trond\&.norbye@couchbase\&.com\&>
.RS 4
Author.
.RE
