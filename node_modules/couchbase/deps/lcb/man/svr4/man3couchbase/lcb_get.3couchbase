'\" t
.\"     Title: lcb_get
.\"    Author: Trond Norbye <trond.norbye@couchbase.com>
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/02/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "LCB_GET" "3couchbase" "08/02/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
lcb_get \- Retrieve a document from the database
.SH "SYNOPSIS"
.sp
cc [ flag \&... ] file\&... \-lcouchbase [ library \&... ]
.sp
.nf
#include <libcouchbase/couchbase\&.h>
.fi
.sp
.nf
lcb_error_t lcb_get(lcb_t instance,
                    const void *command_cookie,
                    lcb_size_t num,
                    const lcb_get_cmd_t *const *commands);
.fi
.SH "DESCRIPTION"
.sp
lcb_get() is used to retrieve documents from the cluster\&. If the library instance is using asynchronous mode (the default) this operation will return immediately and schedule the operations to be executed by the event loop, otherwise it will block until all commands are executed\&. command_cookie is is an opaque field that will be provided to the callback function\&. num is the number of entries in the commands array\&.
.sp
lcb_get_cmd_t is a structure defined in <libcouchbase/arguments\&.h>:
.sp
.if n \{\
.RS 4
.\}
.nf
typedef struct {
    int version;              /* The entry in "v" to use */
    union {
        struct {
            const void *key;    /* The key this response belongs to */
            lcb_size_t nkey;    /* The number of bytes in the key */
            lcb_time_t exptime; /* see below */
            int lock;           /* Lock the document if non\-zero */
            const void *hashkey; /* hash key if != key */
            lcb_size_t nhashkey; /* number of bytes in hash key */
        } v0;
    } v;
} lcb_get_cmd_t;
.fi
.if n \{\
.RE
.\}
.sp
If exptime is set and lock is set, the exptime is the expiry time in seconds for the lock\&. Otherwise a non\-null exptime is the new expiry time for the object (a so\-called get\-and\-touch operation)\&.
.sp
Upon completion the get callback as set by lcb_set_get_callback is called\&.
.SH "RETURN VALUES"
.sp
lcb_get() returns the LCB_SUCCESS on success, or a specific error code upon failure\&. See lcb_strerror(3couchbase) for more information\&.
.SH "EXAMPLES"
.sp
.if n \{\
.RS 4
.\}
.nf
#include <libcouchbase/couchbase\&.h>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
\&.\&.\&.
lcb_t instance;
\&.\&.\&.
lcb_get_cmd_t *get = calloc(1, sizeof(*get));
get\->version = 0;
get\->v\&.v0\&.key = "my\-key";
get\->v\&.v0\&.nkey = strlen(get\->v\&.v0\&.key);
lcb_get_cmd_st* commands[] = { get };
lcb_get(instance, NULL, 1, commands);
\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.SH "ATTRIBUTES"
.sp
See lcb_attributes(5) for descriptions of the following attributes:
.TS
allbox tab(:);
ltB ltB.
T{
ATTRIBUTE TYPE
T}:T{
ATTRIBUTE VALUE
T}
.T&
lt lt
lt lt.
T{
.sp
Interface Stability
T}:T{
.sp
Committed
T}
T{
.sp
MT\-Level
T}:T{
.sp
MT\-Safe
T}
.TE
.sp 1
.SH "COPYRIGHT"
.sp
Copyright 2010\-2013 Couchbase, Inc\&.
.SH "SEE ALSO"
.sp
Learn more at http://www\&.couchbase\&.com/communities/c\&.
.sp
libcouchbase(3lib), lcb_get_get_callback(3couchbase), lcb_set_get_callback(3couchbase), lcb_attributes(5)
.SH "AUTHOR"
.PP
\fBTrond Norbye\fR <\&trond\&.norbye@couchbase\&.com\&>
.RS 4
Author.
.RE
